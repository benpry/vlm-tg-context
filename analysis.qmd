---
title: "analysis"
format: html
---

```{r}
library(tidyverse)
library(here)
library(jsonlite)

source(here("analysis_scripts", "logprobs.R"))

CONTEXT_LOC <- here("context_prep")
OUTPUT_LOC <- here("context_prep")

theme_set(theme_bw() +
            theme(panel.grid = element_blank()))
```

# Load data

Exp 3 data
```{r}
human_data <- read_csv(url("https://raw.githubusercontent.com/vboyce/tg-matcher/refs/heads/main/data/tgmatcheryoked-trials.csv"))

human_selections <- human_data |>
  filter(!is.na(correct_tangram)) |>
  filter(type == "selection") |>
  select(
    workerid, correct, correct_tangram, condition,
    gameId, selected, trial_index, type, orig_trialNum, orig_repNum
  ) |>
  mutate(workerid = as.factor(workerid),
         matcher_trialNum = (trial_index - 3) %/% 3,
         matcher_repNum = matcher_trialNum %/% 12,
         workerid = ifelse(workerid == "3157" & condition == "yoked", "3157a", workerid)) |> # somehow two participants were assigned to 3157 -- but each set looks complete?
  filter(workerid != "141", workerid != "35") |> # exclude two participants who didn't finish
  select(-trial_index)
```

## Yoked
```{r}
yoked_human <- human_selections |> 
  filter(condition == "yoked") |>
  group_by(gameId, condition, orig_trialNum, orig_repNum, target = correct_tangram) |>
  summarise(accuracy = mean(correct),
            .groups = "drop") |> 
  rename(
    trialNum = orig_trialNum,
    repNum = orig_repNum
  ) |> 
  mutate(type = "human_naive")
```

```{r}
yoked_qwen <- read_csv(here(OUTPUT_LOC, "yoked_Qwen2.5-VL-32B-Instruct_logprobs.csv"))

yoked_orig <- yoked_qwen |> 
  select(gameId, condition, trialNum, repNum, target, accuracy = original_pct_correct) |> 
  mutate(type = "human_original")

yoked_qwen_long <- yoked_qwen |> 
  logprobs_to_long() |> 
  mutate(type = "model_qwen")

yoked_combined <- bind_rows(
  yoked_orig,
  yoked_human,
  yoked_qwen_long
) |> 
  mutate(type = factor(type, levels = c("human_original", "human_naive", "model_qwen")))
```

```{r}
ggplot(yoked_combined |> mutate(repNum = repNum + 1),
       aes(x = repNum, y = accuracy, col = type)) +
  geom_hline(yintercept = 1/12, lty = "dashed") +
  geom_point(position = position_jitter(width = .2), alpha = .1) +
  stat_summary(aes(group = interaction(gameId, type)), 
               fun = mean, geom = "line", alpha = .2) +
  # geom_line(aes(group = interaction(gameId, tangram, type)), alpha = .2) +
  geom_smooth(method = "glm", formula = y ~ log(x)) +
  scale_x_continuous(breaks = 1:6) +
  labs(x = "Repetition number", y = "Accuracy", col = "Type")
```


