---
title: "analysis"
format: html
---

```{r}
library(tidyverse)
library(here)
library(jsonlite)

source(here("analysis_scripts", "logprobs.R"))
source(here("analysis_scripts", "plot_helpers.R"))

CONTEXT_LOC <- here("context_prep")
OUTPUT_LOC <- here("context_prep")
```

# Load data

Exp 3 data
```{r}
human_data <- read_csv(url("https://raw.githubusercontent.com/vboyce/tg-matcher/refs/heads/main/data/tgmatcheryoked-trials.csv"))

human_selections <- human_data |>
  filter(!is.na(correct_tangram)) |>
  filter(type == "selection") |>
  select(
    workerid, correct, correct_tangram, condition,
    gameId, selected, trial_index, type, orig_trialNum, orig_repNum
  ) |>
  mutate(workerid = as.factor(workerid),
         matcher_trialNum = (trial_index - 3) %/% 3,
         matcher_repNum = matcher_trialNum %/% 12,
         workerid = ifelse(workerid == "3157" & condition == "yoked", "3157a", workerid)) |> # somehow two participants were assigned to 3157 -- but each set looks complete?
  filter(workerid != "141", workerid != "35") |> # exclude two participants who didn't finish
  select(-trial_index)
```

## Yoked
```{r}
yoked_human <- human_selections |> 
  filter(condition == "yoked") |>
  group_by(gameId, condition, orig_trialNum, orig_repNum, 
           matcher_trialNum, matcher_repNum, target = correct_tangram) |>
  summarise(accuracy = mean(correct),
            .groups = "drop") |> 
  mutate(type = "human_naive")
```

```{r}
yoked_qwen <- read_csv(here(OUTPUT_LOC, "yoked_Qwen2.5-VL-32B-Instruct_logprobs.csv"))

yoked_orig <- yoked_qwen |> 
  mutate(matcher_trialNum = trialNum,
         matcher_repNum = repNum,
         type = "human_original") |> 
  select(gameId, condition, orig_trialNum = trialNum, orig_repNum = repNum, 
         matcher_trialNum, matcher_repNum, target, accuracy = original_pct_correct, type)

yoked_qwen_long <- yoked_qwen |> 
  logprobs_to_long() |> 
  mutate(type = "model_qwen")

yoked_combined <- bind_rows(
  yoked_orig,
  yoked_human,
  yoked_qwen_long
) |> 
  mutate(type = factor(type, levels = c("human_original", "human_naive", "model_qwen")))
```

```{r}
make_accuracy_plot(yoked_combined)
```

## Shuffled
```{r}
shuffled_human <- human_selections |> 
  filter(condition == "shuffled") |>
  group_by(gameId, condition, orig_trialNum, orig_repNum, 
           matcher_trialNum, matcher_repNum, target = correct_tangram) |>
  summarise(accuracy = mean(correct),
            .groups = "drop") |> 
  mutate(type = "human_naive")

shuffled_qwen <- read_csv(here(OUTPUT_LOC, "shuffled_Qwen2.5-VL-32B-Instruct_logprobs.csv"))

shuffled_qwen_long <- shuffled_qwen |> 
  logprobs_to_long() |> 
  mutate(type = "model_qwen")

shuffled_combined <- bind_rows(
  shuffled_human,
  shuffled_qwen_long
) |> 
  mutate(type = factor(type, levels = c("human_naive", "model_qwen")))
```

```{r}
make_accuracy_plot(shuffled_combined)
```
